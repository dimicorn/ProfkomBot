import telebot
from telebot import types
import json
import EmailSender
import time
import GoogleSheets as gs

"""
auth_status has values:
not auth - if user is not authorized
auth in process - if user has sent his email to the bot
code wait - if the bot has sent the confirmation code to user's email
auth - confirmation code is right, user is authorized
"""


# random code generator
def rand(x):
    hour = x.tm_hour
    mins = x.tm_min
    sec = x.tm_sec
    hour = hour * 3600
    mins = mins * 60
    t = hour + mins + sec
    return t


def main():
    with open("config.json") as a:
        config = json.load(a)
    a.close()

    token = config["token"]
    bot = telebot.TeleBot(token)

    # defining /start command
    @bot.message_handler(commands=["start"])
    def welcome(message):
        # loading all authorized users
        with open("users.json") as f:
            users = json.load(f)
        f.close()

        if str(message.from_user.id) in users and users[str(message.from_user.id)]["auth_status"] == "auth":
            # user is not first time using bot and is authorized
            '''
            if :  # user is authorized
                bot.send_message(message.chat.id, "–Ø –ø—Ä–æ—Ñ–∫–æ–º–ë–æ—Çü§ñ\n–ñ–¥—É –≤–∞—à–∏—Ö –∫–æ–º–∞–Ω–¥!")
            else:
                markup = types.InlineKeyboardMarkup(row_width=2)
                # inline buttons
                item1 = types.InlineKeyboardButton("–î–∞", callback_data='in labor union')
                item2 = types.InlineKeyboardButton("–ù–µ—Ç", callback_data='not in labor union')
                markup.row(item1, item2)
                bot.send_message(message.chat.id,
                                 "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø profkomBot ü§ñ\n–°–æ—Å—Ç–æ–∏—Ç–µ –ª–∏ –≤—ã –≤ –ø—Ä–æ—Ñ—Å–æ—é–∑–µ?", reply_markup=markup)
            '''
        else:  # user is not authorized/first time using the bot
            users[message.from_user.id] = \
                {"id": message.from_user.id, "auth_status": "not auth", "code": "Nan"}
            markup = types.InlineKeyboardMarkup(row_width=2)
            # inline buttons
            item1 = types.InlineKeyboardButton("–î–∞", callback_data="in labor union")
            item2 = types.InlineKeyboardButton("–ù–µ—Ç", callback_data="not in labor union")
            markup.row(item1, item2)
            bot.send_message(message.chat.id,
                             "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø profkomBot ü§ñ\n–°–æ—Å—Ç–æ–∏—Ç–µ –ª–∏ –≤—ã –≤ –ø—Ä–æ—Ñ—Å–æ—é–∑–µ?", reply_markup=markup)
            # updating users.json
            users_file = open("users.json", "w")
            json.dump(users, users_file)
            users_file.close()

    # defining /services command
    @bot.message_handler(commands=["services"])
    def service(message):
        # loading users
        with open("users.json") as f:
            users = json.load(f)
        f.close()

        if users[str(message.from_user.id)]["auth_status"] == "auth":  # only authorized users has access to the command
            markup = types.InlineKeyboardMarkup(row_width=1)
            # inline buttons
            item1 = types.InlineKeyboardButton("–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –º–∞—Ç. –ø–æ–º–æ—â—åüí∞", callback_data="material help")
            item2 = types.InlineKeyboardButton("–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –ê–ü–û–°üí∏", callback_data="apos")
            item3 = types.InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–æ—Ä–∏–∏üßñüèª‚Äç‚ôÇÔ∏è", callback_data="dispensary")
            item4 = types.InlineKeyboardButton("–ü—Ä–æ–≥—Ä–∞–º–º–∞ ¬´–†–ñ–î –±–æ–Ω—É—Å¬ªüöÇ", callback_data="train")
            item5 = types.InlineKeyboardButton("–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ—Å–æ—é–∑üìã", callback_data="labor union")
            item6 = types.InlineKeyboardButton("–°–∫–∏–¥–∫–∏ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—èü§ë", callback_data="discounts")
            item7 = types.InlineKeyboardButton("–ü–æ–º–æ—â—åüÜò", callback_data="help")
            items = [item1, item2, item3, item4, item5, item6, item7]
            for i in items:
                markup.row(i)
            bot.send_message(message.chat.id, "–°–µ—Ä–≤–∏—Å—ã –∏ —É—Å–ª—É–≥–∏:", reply_markup=markup)
        else:
            bot.send_message(message.chat.id,
                             "–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ —è –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –Ω–∞ —ç—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å...\n"
                             "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –æ–¥–Ω–æ–π –∏–∑ –∫–æ–º–∞–Ω–¥ –∏–ª–∏ –∫–Ω–æ–ø–æ–∫")

    # defining messages to the bot
    @bot.message_handler(content_types=["text"])
    def echo(message):
        # loading users
        with open("users.json") as f:
            users = json.load(f)
        f.close()

        if users[str(message.from_user.id)]["auth_status"] == "auth in process":
            email = message.text
            if email[-13:] == "@phystech.edu":  # checking if it's a phystech email
                if gs.find_user(email):  # checking if it is in labor union table
                    bot.send_message(message.chat.id,
                                     "–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–∞ –Ω–µ–µ –∫–æ–¥ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º. "
                                     "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —ç—Ç–æ—Ç –∫–æ–¥ üì¨")
                    # generating confirmation code
                    temp = time.gmtime()
                    code = rand(temp)
                    # sending confirmation code to the user
                    EmailSender.send_email(email, code)

                    users[str(message.from_user.id)]["auth_status"] = "code wait"
                    users[str(message.from_user.id)]["code"] = code
                    # updating users.json
                    users_file = open("users.json", "w")
                    json.dump(users, users_file)
                    users_file.close()

                else:
                    bot.send_message(message.chat.id, "–£–ø—Å, –≤—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –ø—Ä–æ—Ñ—Å–æ—é–∑–µ")
                    users[str(message.from_user.id)]["auth_status"] = "not auth"
                    # updating users.json
                    users_file = open("users.json", "w")
                    json.dump(users, users_file)
                    users_file.close()
            else:
                bot.send_message(message.chat.id, "–≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –ø–æ—á—Ç—É :O")

        elif users[str(message.from_user.id)]["auth_status"] == "code wait":
            key = message.text
            if key == str(users[str(message.from_user.id)]["code"]):
                # checking in the user texted the right confirmation code from the email
                bot.send_message(message.chat.id, "–í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –≤–∞—à—É –ø–æ—á—Ç—É ‚úÖ")
                users[str(message.from_user.id)]["auth_status"] = "auth"
                # updating users.json
                users_file = open("users.json", "w")
                json.dump(users, users_file)
                users_file.close()
            else:
                bot.send_message(message.chat.id, "–ö–æ–¥ " + key + " –Ω–µ–≤–µ—Ä–Ω—ã–π ‚ùå\n–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –∏–∑ –ø–∏—Å—å–º–∞")
                users[str(message.from_user.id)]["auth_status"] = "code wait"
                # updating users.json
                users_file = open("users.json", "w")
                json.dump(users, users_file)
                users_file.close()
        else:
            bot.send_message(message.chat.id,
                             "–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ —è –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –Ω–∞ —ç—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å...\n"
                             "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –æ–¥–Ω–æ–π –∏–∑ –∫–æ–º–∞–Ω–¥ –∏–ª–∏ –∫–Ω–æ–ø–æ–∫")

    # buttons interaction
    @bot.callback_query_handler(func=lambda call: True)
    def callback_inline(call):
        # loading users
        with open("users.json") as f:
            users = json.load(f)
        try:
            if call.message:
                bot.answer_callback_query(call.id, show_alert=False, text="ü§ñ")
                if call.data == "in labor union":
                    bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–∞—à—É —Ñ–∏–∑—Ç–µ—Ö–æ–≤—Å–∫—É—é –ø–æ—á—Ç—É üì©")
                    users[str(call.message.chat.id)]["auth_status"] = "auth in process"
                    # updating users.json
                    users_file = open("users.json", "w")
                    json.dump(users, users_file)
                    users_file.close()
                elif call.data == "not in labor union":
                    bot.send_message(call.message.chat.id,
                                     "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ –º–Ω–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—ã—Ç—å —á–ª–µ–Ω–æ–º –ø—Ä–æ—Ñ—Å–æ—é–∑–∞!"
                                     "\n–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏ –ø—Ä–∏—à–ª–∏—Ç–µ –Ω–∞ –Ω–∞—à—É –ø–æ—á—Ç—É profkom@phystech.edu")
                    doc = open("./Zayavlenie_priem_v_profsoyuz_student.pdf", "rb")
                    bot.send_document(call.message.chat.id, doc)
                if users[str(call.message.chat.id)]["auth_status"] == "auth":
                    if call.data == "material help":
                        bot.send_message(call.message.chat.id,
                                         "–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –º–∞—Ç. –ø–æ–º–æ—â—å:\n https://vk.cc/av1z3P")
                    elif call.data == "apos":
                        bot.send_message(call.message.chat.id,
                                         "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏ –ø—Ä–∏—à–ª–∏—Ç–µ –Ω–∞ –Ω–∞—à—É –ø–æ—á—Ç—É\nprofkom@phystech.edu\n\n"
                                         "–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞—è–≤–ª–µ–Ω–∏–µ: https://vk.cc/c5v2DV")
                        bot.send_message(call.message.chat.id,
                                         "–ò–ª–∏ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ –≤ 224–ì–ö\n\n–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:\n"
                                         "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫-–ø—è—Ç–Ω–∏—Ü–∞ 09:30-16:30")
                    elif call.data == "dispensary":
                        bot.send_message(call.message.chat.id, "https://telegra.ph/FAQ-po-profilaktoriyu-08-30")
                    elif call.data == "train":
                        bot.send_message(call.message.chat.id, "–°—Å—ã–ª–∫–∞ –Ω–∞ ¬´–†–ñ–î –±–æ–Ω—É—Å¬ª:\nhttps://vk.cc/8FFtFa")
                    elif call.data == "labor union":
                        doc = open("./Zayavlenie_priem_v_profsoyuz_student.pdf", "rb")
                        bot.send_document(call.message.chat.id, doc)
                        bot.send_message(call.message.chat.id,
                                         "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏ –ø—Ä–∏—à–ª–∏—Ç–µ –Ω–∞ –Ω–∞—à—É –ø–æ—á—Ç—É\nprofkom@phystech.edu")
                    elif call.data == "discounts":
                        markup = types.InlineKeyboardMarkup(row_width=1)
                        # inline buttons
                        item1 = types.InlineKeyboardButton("–ö–∞—Ä—Ç–∞ Metro", callback_data="metro")
                        item2 = types.InlineKeyboardButton("–†–ñ–î –±–æ–Ω—É—Å", callback_data="bonus")
                        item3 = types.InlineKeyboardButton("–¢–µ–ª–µ2", callback_data="tele2")
                        item4 = types.InlineKeyboardButton("SkyEng", callback_data="skyeng")
                        item5 = types.InlineKeyboardButton("–¶–∏—Ñ–µ—Ä–±–ª–∞—Ç", callback_data="clock")
                        item6 = types.InlineKeyboardButton("X-fit Studio", callback_data="x-fit")
                        item7 = types.InlineKeyboardButton("–∫–∞—Ñ–µ Boltay", callback_data="boltay")
                        item8 = types.InlineKeyboardButton("–∫–∞—Ñ–µ –¢–µ–æ—Ä–∏—è", callback_data="theory")
                        item9 = types.InlineKeyboardButton("–®–Ω–∏—Ü–µ–ª—å–Ω–∞—è", callback_data="schnitzel")
                        item10 = types.InlineKeyboardButton("–ú–∞–≥–∞–∑–∏–Ω Herb-store.ru", callback_data="herb-store")
                        item11 = types.InlineKeyboardButton("–ê–≤—Ç–æ—à–∫–æ–ª–∞", callback_data="driving school")
                        item12 = types.InlineKeyboardButton("–ë—É—Ñ–µ—Ç —Ç—Ä–æ–π–∫–∏", callback_data="buffet")
                        items = [item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12]
                        for i in items:
                            markup.row(i)
                        bot.send_message(call.message.chat.id, "–ö–æ–º–ø–∞–Ω–∏–∏ –ø–∞—Ä—Ç–Ω—ë—Ä—ã:", reply_markup=markup)
                    elif call.data == "help":
                        bot.send_message(call.message.chat.id,
                                         "–û –≤–æ–∑–Ω–∏–∫—à–∏—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö –ø–∏—à–∏—Ç–µ —Å—é–¥–∞:\n@dimicorn")
                    elif call.data == "metro":
                        bot.send_message(call.message.chat.id,
                                         "–ö–∞—Ä—Ç–∞ Metro\n\n–û–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ü–∏–∏: –ö–∞—Ä—Ç–∞ –≥–æ—Å—Ç—è —Ä–∞–±–æ—Ç–∞–µ—Ç 3 –≥–æ–¥–∞.–ù–∞—à–∞ –∫–∞—Ä—Ç–∞: –°—Ä–æ–∫ "
                                         "–¥–µ–π—Å—Ç–≤–∏—è –∫–∞—Ä—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞ METRO –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–π –ø–æ–∫—É–ø–∫–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ "
                                         "12 –º–µ—Å—è—Ü–µ–≤ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω. –í —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø–æ–∫—É–ø–æ–∫ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ METRO "
                                         "–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞ —Å–æ–±–æ–π –ø—Ä–∞–≤–æ –Ω–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –≤ —Å–≤–æ–∏ —Ç–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã. "
                                         "–¢–∞–∫–∂–µ –Ω–∞ –Ω–µ–π –∫–æ–ø—è—Ç—Å—è –±–∞–ª–ª—ã –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è —Å–∫–∏–¥–∫–∏ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏\n\n"
                                         "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å: https://vk.cc/8BhyW9")
                    elif call.data == "bonus":
                        bot.send_message(call.message.chat.id,
                                         "–†–ñ–î –±–æ–Ω—É—Å\n\n"
                                         "–û–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ü–∏–∏: https://rzd-bonus.ru/about/student-program/\n\n"
                                         "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å: https://vk.cc/8FFtFa")
                    elif call.data == "tele2":
                        bot.send_message(call.message.chat.id,
                                         "–¢–µ–ª–µ2\n\n–û–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ü–∏–∏: –í—ã–≥–æ–¥–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã\n\n"
                                         "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å: https://www.mta-tele2.ru/")
                    elif call.data == "skyeng":
                        bot.send_message(call.message.chat.id,
                                         "SkyEng\n\n–û–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ü–∏–∏: –í—ã–≥–æ–¥–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã\n\n"
                                         "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å: https://corp.skyeng.ru/profkom-mfti")
                    elif call.data == "clock":
                        bot.send_message(call.message.chat.id,
                                         "–¶–∏—Ñ–µ—Ä–±–ª–∞—Ç\n\n–û–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ü–∏–∏:  (https://vk.com/clokface)\n"
                                         "-20% —Å 10:00 –¥–æ 19:00;\n- 300 —Ä—É–±. –∑–∞ –Ω–æ—á—å (—Å 00:00 –¥–æ 8:00)\n\n"
                                         "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å: –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ—Å–æ—é–∑–Ω—ã–π –±–∏–ª–µ—Ç")
                    elif call.data == "x-fit":
                        bot.send_message(call.message.chat.id,
                                         "X-fit Studio\n\n–û–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ü–∏–∏: –ê–±–æ–Ω–µ–º–µ–Ω—Ç –Ω–∞ –≥–æ–¥ - 10000 —Ä—É–± (-30%)\n"
                                         "–Ω–∞ –ø–æ–ª–≥–æ–¥–∞ - 7500 —Ä—É–± (-17%)\n–Ω–∞ –º–µ—Å—è—Ü - 3000 —Ä—É–± (-40%)\n\n"
                                         "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å: –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ—Å–æ—é–∑–Ω—ã–π –±–∏–ª–µ—Ç")
                    elif call.data == "boltay":
                        bot.send_message(call.message.chat.id,
                                         "–∫–∞—Ñ–µ Boltay\n\n–û–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ü–∏–∏: –°–∫–∏–¥–∫–∞ 20% –Ω–∞ –≤—Å–µ –≥–æ—Ä—è—á–∏–µ "
                                         "–Ω–∞–ø–∏—Ç–∫–∏ –∏ –≤–æ–∫–∏ –¥–ª—è —á–ª–µ–Ω–æ–≤ –ø—Ä–æ—Ñ—Å–æ—é–∑–∞ –≤ ¬´—Å—á–∞—Å—Ç–ª–∏–≤—ã–µ —á–∞—Å—ã¬ª. "
                                         "–ê –∏–º–µ–Ω–Ω–æ —Å 8:30 –¥–æ 12:00 –∏ —Å 19:00 –¥–æ 00:00\n\n"
                                         "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å: –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ—Å–æ—é–∑–Ω—ã–π –±–∏–ª–µ—Ç")
                    elif call.data == "theory":
                        bot.send_message(call.message.chat.id,
                                         "–∫–∞—Ñ–µ –¢–µ–æ—Ä–∏—è\n\n–û–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ü–∏–∏: –°–∫–∏–¥–∫–∞ 10% –Ω–∞ –≤—Å—ë –¥–ª—è —á–ª–µ–Ω–æ–≤ –ø—Ä–æ—Ñ—Å–æ—é–∑–∞.\n\n"
                                         "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å: –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ—Å–æ—é–∑–Ω—ã–π –±–∏–ª–µ—Ç")
                    elif call.data == "schnitzel":
                        bot.send_message(call.message.chat.id,
                                         "–®–Ω–∏—Ü–µ–ª—å–Ω–∞—è\n\n–û–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ü–∏–∏: –°–∫–∏–¥–∫–∞ 20% –Ω–∞ –≤—Å—ë –¥–ª—è —á–ª–µ–Ω–æ–≤ –ø—Ä–æ—Ñ—Å–æ—é–∑–∞.\n\n"
                                         "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å: –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ—Å–æ—é–∑–Ω—ã–π –±–∏–ª–µ—Ç")
                    elif call.data == "herb-store":
                        bot.send_message(call.message.chat.id,
                                         "–ú–∞–≥–∞–∑–∏–Ω Herb-store.ru\n\n–û–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ü–∏–∏: "
                                         "–°–∫–∏–¥–∫–∞ 10% –Ω–∞ –≤—Å—ë –¥–ª—è —á–ª–µ–Ω–æ–≤ –ø—Ä–æ—Ñ—Å–æ—é–∑–∞.\n\n"
                                         "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å: –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ—Å–æ—é–∑–Ω—ã–π –±–∏–ª–µ—Ç")
                    elif call.data == "driving school":
                        bot.send_message(call.message.chat.id,
                                         "–ê–≤—Ç–æ—à–∫–æ–ª–∞\n\n–û–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ü–∏–∏: –û–±—É—á–µ–Ω–∏–µ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ú–§–¢–ò, "
                                         "–∑–∞–ø–æ–ª–Ω–∏–≤—à–∏—Ö –¥–∞–Ω–Ω—É—é —Ñ–æ—Ä–º—É –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é B —Å—Ç–æ–∏—Ç 30.000 –ø—Ä–∏ –ø—Ä–µ–¥—ä—è–≤–ª–µ–Ω–∏–∏ "
                                         "—Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ –±–∏–ª–µ—Ç–∞, –∞ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é A —Å—Ç–æ–∏—Ç 15.000 (–≤–æ–∑–º–æ–∂–Ω–∞ —Ä–∞—Å—Å—Ä–æ—á–∫–∞), "
                                         "–∏ –æ–Ω–∏ –ø–æ–ª—É—á–∞—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç –∞–≤—Ç–æ—à–∫–æ–ª—ã. –ó–∞–Ω—è—Ç–∏—è –ø–æ —Ç–µ–æ—Ä–∏–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã "
                                         "–¥–ª—è –æ–±–µ–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –í–æ–∂–¥–µ–Ω–∏–µ —É –º–æ—Ç–æ –≥—Ä—É–ø–ø –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å "
                                         "–Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ –≤ –ú—ã—Ç–∏—â–∞—Ö, —Ç—É–¥–∞ –Ω–∞–¥–æ –±—É–¥–µ—Ç –¥–æ–±—Ä–∞—Ç—å—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.\n\n"
                                         "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å: https://forms.gle/QYqWQpPJ46FL5bQWA")
                    elif call.data == "buffet":
                        bot.send_message(call.message.chat.id,
                                         "–ë—É—Ñ–µ—Ç —Ç—Ä–æ–π–∫–∏\n\n–û–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ü–∏–∏: –°–∫–∏–¥–∫–∞ 10% –Ω–∞ –≤—Å—ë –¥–ª—è —á–ª–µ–Ω–æ–≤ –ø—Ä–æ—Ñ—Å–æ—é–∑–∞.\n\n"
                                         "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å: –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ—Å–æ—é–∑–Ω—ã–π –±–∏–ª–µ—Ç")
        except Exception as e:
            print(repr(e))

    # run
    bot.polling(none_stop=True)


if __name__ == "__main__":
    main()
